
name: CI/CD User java

on:
  push:
    branches: [ master ]
    paths: [ apis/user-java/**, .github/workflows/CI-apis-user-java.yml ]
  pull_request:
    branches: [ master ]
    paths: 
      - apis/user-java/**
      - .github/workflows/CI-apis-user-java.yml

jobs:
  build:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: apis/user-java 

    steps:
    - name: Checkout the source code
      uses: actions/checkout@v2

    - name: Setup Java 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Build user-java
      run: mvn -B package --file pom.xml

    - name: Test user-java
      run: mvn test

    - name: Build Docker image
      uses: docker/build-push-action@v1
      env:
        SQL_USER: ${{ secrets.SQL_USER }}
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        SQL_SERVER: openhacktibi123sql.database.windows.net
        SQL_DBNAME: mydrivingDB
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ github.repository }}/user-java
        tag_with_ref: true

    - name: On error -> Create issue 
      if: ${{ failure() }}
      uses: actions/github-script@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
